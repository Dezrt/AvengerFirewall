import time
import os
import re
import logging
from firewall_manager import FirewallManager

# –õ–æ–≥-—Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–µ–π (–ª—É—á—à–µ, —á–µ–º —Å–ø–∞–º –≤ –∫–æ–Ω—Å–æ–ª—å)
LOG_FILE = "/var/log/avenger_firewall.log"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä
logging.basicConfig(
    filename=LOG_FILE,
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s",
)

# –ü—É—Ç–∏ –∫ –ª–æ–≥-—Ñ–∞–π–ª–∞–º –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
LOG_FILES = ["/var/log/auth.log", "/var/log/nginx/access.log", "/var/log/iptables.log"]

# –†–µ–≥—É–ª—è—Ä–∫–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞—Ç–∞–∫
FAILED_LOGIN_PATTERN = r"Failed password for .* from (\d+\.\d+\.\d+\.\d+)"
DDOS_PATTERN = r"(\d+\.\d+\.\d+\.\d+) - - .*\"GET /.* HTTP/1.1\" 200"

# –õ–∏–º–∏—Ç –ø–æ–ø—ã—Ç–æ–∫ –ø–µ—Ä–µ–¥ –±–∞–Ω–æ–º
THRESHOLD = 5

class LogsWatcher:
    def __init__(self, log_files):
        self.log_files = log_files
        self.firewall = FirewallManager()
        self.ip_attempts = {}  # –ü–æ–¥—Å—á–µ—Ç –ø–æ–ø—ã—Ç–æ–∫ –ø–æ IP

    def check_logs(self):
        """ –ß–∏—Ç–∞–µ–º –ª–æ–≥–∏ –∏ –∏—â–µ–º –∞—Ç–∞–∫–∏ """
        for log_file in self.log_files:
            if not os.path.exists(log_file):
                logging.warning(f"–õ–æ–≥-—Ñ–∞–π–ª {log_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                continue

            with open(log_file, "r") as file:
                for line in file:
                    self.process_log_line(line)

    def process_log_line(self, line):
        """ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–æ–∫—É –ª–æ–≥–∞ –Ω–∞ –∞—Ç–∞–∫–∏ """
        failed_match = re.search(FAILED_LOGIN_PATTERN, line)
        if failed_match:
            ip = failed_match.group(1)
            self.track_ip(ip)

        ddos_match = re.search(DDOS_PATTERN, line)
        if ddos_match:
            ip = ddos_match.group(1)
            self.track_ip(ip)

    def track_ip(self, ip):
        """ –£—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏ –∞—Ç–∞–∫–∏ –∏ –±–∞–Ω–∏–º –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ø–æ—Ä–æ–≥–∞ """
        self.ip_attempts[ip] = self.ip_attempts.get(ip, 0) + 1
        logging.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å IP: {ip} ({self.ip_attempts[ip]} –ø–æ–ø—ã—Ç–æ–∫)")

        if self.ip_attempts[ip] >= THRESHOLD:
            logging.warning(f"üö® IP {ip} –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç! –ë–ª–æ–∫–∏—Ä—É–µ–º!")
            self.firewall.ban_ip(ip)

    def watch_logs(self):
        """ –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ª–æ–≥–æ–≤ """
        logging.info("üöÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤ –∑–∞–ø—É—â–µ–Ω...")
        while True:
            self.check_logs()
            self.firewall.unban_expired_ips()
            time.sleep(10)

if __name__ == "__main__":
    watcher = LogsWatcher(LOG_FILES)
    watcher.watch_logs()
